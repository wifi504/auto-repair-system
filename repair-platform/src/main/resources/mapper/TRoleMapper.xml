<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhl.rp.repository.TRoleMapper">
  <resultMap id="BaseResultMap" type="com.lhl.rp.bean.TRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_num, code, `name`, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultType="com.lhl.rp.bean.TRole">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    t_role
    ORDER BY
    order_num ASC
  </select>
  <select id="listPermission" resultMap="com.lhl.rp.repository.TPermissionMapper.BaseResultMap">
    SELECT tp.*
    FROM t_role tr
           LEFT JOIN t_role_permission trp ON tr.id = trp.role_id
           LEFT JOIN t_permission tp ON trp.permission_id = tp.id
    WHERE tr.id = ${roleId}
  </select>
  <select id="selectByCode" resultType="com.lhl.rp.bean.TRole">
    select
    <include refid="Base_Column_List"/>
    from t_role
    where code = #{code}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByPrimaryKeys" parameterType="java.util.List">
    DELETE FROM t_role
    WHERE id IN
    <foreach collection="list" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <delete id="deleteRolePermissions">
    DELETE
    FROM t_role_permission
    WHERE role_id = #{roleId}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lhl.rp.bean.TRole" useGeneratedKeys="true">
    insert into t_role (order_num, code, `name`,
      remark)
    values (#{orderNum,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lhl.rp.bean.TRole" useGeneratedKeys="true">
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="code != null">
        `code`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="remark != null">
        `remark`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="addRolePermissions">
    INSERT INTO t_role_permission (role_id, permission_id)
    VALUES
    <foreach collection="permissionIds" item="permissionId" separator=",">
      (#{roleId}, #{permissionId})
    </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lhl.rp.bean.TRole">
    update t_role
    <set>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhl.rp.bean.TRole">
    update t_role
    set order_num = #{orderNum,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>